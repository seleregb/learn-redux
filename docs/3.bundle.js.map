{"version":3,"sources":["webpack:///./client/components/PhotoGrid.js","webpack:///./client/actions/actionCreators.js","webpack:///./client/components/Photo.js"],"names":["PhotoGrid","connect","store","posts","postsReducer","withRouter","_this","this","props","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","map","post","index","_Photo__WEBPACK_IMPORTED_MODULE_2__","_extends","key","React","Component","__webpack_exports__","incrementLikes","dispatch","type","INCREMENT_LIKES","addComments","postId","author","comment","ADD_COMMENT","removeComments","REMOVE_COMMENT","fetchPosts","ALL_POSTS","payload","location","fetchSinglePost","SINGLE_POST","Photo","comments","commentsReducer","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","bind","_assertThisInitialized","viewPostDetails","event","preventDefault","history","push","concat","code","_this$props","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","src","display_src","alt","caption","react_transition_group__WEBPACK_IMPORTED_MODULE_2__","classNames","timeout","unmountOnExit","likes","onClick","length"],"mappings":"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","file":"3.bundle.js","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Photo from './Photo';\r\nimport { withRouter } from 'react-router';\r\n\r\n@withRouter\r\n@connect((store) => ({\r\n  posts: store.postsReducer\r\n}))\r\n\r\nclass PhotoGrid extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { posts } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"photo-grid\" >\r\n          {posts.map((post, index) => <Photo {...this.props} key={index} index={index} post={post} />)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PhotoGrid;","import { INCREMENT_LIKES, ADD_COMMENT, REMOVE_COMMENT, ALL_POSTS, SINGLE_POST } from './actionTypes';\r\n\r\n// Increment\r\n// export function increment(index) {\r\n//   return {\r\n//     type: ActionTypes.INCREMENT_LIKES,\r\n//     index\r\n//   }\r\n// }\r\n\r\nexport const incrementLikes = (index) => {\r\n  return (dispatch) => dispatch({ type: INCREMENT_LIKES, index });\r\n}\r\n\r\n// // Add Comment\r\n// export function addComment(postId, author, comment) {\r\n//   return {\r\n//     type: ActionTypes.ADD_COMMENT,\r\n//     postId,\r\n//     author,\r\n//     comment\r\n//   }\r\n// }\r\n\r\nexport const addComments = (postId, author, comment) => {\r\n  return (dispatch) => dispatch({\r\n    type: ADD_COMMENT, postId, author, comment\r\n  });\r\n}\r\n\r\n// // Remove Comment\r\n// export function removeComment(postId, index) {\r\n//   return {\r\n//     type: ActionTypes.REMOVE_COMMENT,\r\n//     index,\r\n//     postId\r\n//   }\r\n// }\r\n\r\nexport const removeComments = (postId, index) => {\r\n  return (dispatch) => dispatch({\r\n    type: REMOVE_COMMENT, index, postId\r\n  });\r\n}\r\n\r\nexport const fetchPosts = () => {\r\n  return (dispatch) => dispatch({\r\n    type: ALL_POSTS,\r\n    payload: location\r\n  });\r\n}\r\n\r\nexport const fetchSinglePost = (postId, index) => {\r\n  return (dispatch) => dispatch({\r\n    type: SINGLE_POST, postId, index,\r\n    payload: location\r\n  })\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from \"react-redux\";\r\nimport { incrementLikes } from '../actions/actionCreators';\r\n\r\n@connect((store) => ({\r\n  comments: store.commentsReducer\r\n}))\r\n\r\nclass Photo extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.incrementLikes = this.incrementLikes.bind(this);\r\n    this.viewPostDetails = this.viewPostDetails.bind(this);\r\n  }\r\n\r\n  incrementLikes() {\r\n    const { index } = this.props;\r\n    this.props.dispatch(incrementLikes(index));\r\n  }\r\n\r\n  viewPostDetails(event) {\r\n    event.preventDefault();\r\n    const { post } = this.props;\r\n    this.props.history.push(`/view/${post.code}`)\r\n  }\r\n\r\n  render() {\r\n    const { post, comments } = this.props;\r\n\r\n    return (\r\n      <figure className=\"grid-figure\">\r\n        <div className=\"grid-photo-wrap\">\r\n          <Link to={`/view/${post.code}`}>\r\n            <img src={post.display_src} alt={post.caption} className=\"grid-photo\"></img>\r\n          </Link>\r\n          {/* <img src={post.display_src} alt={post.caption} className=\"grid-photo\" onClick={this.viewPostDetails}></img> */}\r\n\r\n\r\n          <CSSTransition classNames=\"like\"\r\n            timeout={500} unmountOnExit>\r\n            <span key={post.likes} className=\"likes-heart\">{post.likes}</span>\r\n\r\n          </CSSTransition>\r\n        </div>\r\n\r\n        <figcaption>\r\n          <p>{post.caption}</p>\r\n          <div className=\"control-buttons\">\r\n            <button className=\"likes\" onClick={this.incrementLikes}>\r\n              &hearts; {post.likes}\r\n            </button>\r\n            {/* <a className=\"button\" onClick={this.viewPostDetails}>\r\n              \r\n            </a> */}\r\n            <Link className=\"button\" to={`/view/${post.code}`}>\r\n              <span className=\"comment-count\">\r\n                {' '}<span className=\"speech-bubble\"></span>\r\n                {comments[post.code] ? comments[post.code].length : 0}\r\n              </span>\r\n            </Link>\r\n          </div>\r\n        </figcaption>\r\n\r\n      </figure>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Photo;"],"sourceRoot":""}